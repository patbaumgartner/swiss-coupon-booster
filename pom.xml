<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.5.7</version>
    <relativePath></relativePath>
    <!-- lookup parent from repository -->
  </parent>

  <groupId>com.patbaumgartner</groupId>
  <artifactId>coupon-booster</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <name>coupon-booster</name>
  <description>coupon-booster</description>

  <properties>
    <!--
    mvn versions:display-plugin-updates

    mvn versions:update-parent \
        "-Dmaven.version.ignore=.*-M.*,.*-SNAPSHOT.*,.*-beta.*,.*-rc.*,.*-alpha.*,.*-ea.*,.*-preview.*,.*-milestone.*"

    mvn versions:update-properties \
      -DallowSnapshots=false \
      "-Dmaven.version.ignore=.*-M.*,.*-SNAPSHOT.*,.*-beta.*,.*-rc.*,.*-alpha.*,.*-ea.*,.*-preview.*,.*-milestone.*"

    mvn dependency-check:check
    mvn jacoco:report
    mvn spotbugs:check
    mvn pitest:mutationCoverage
    -->
    <java.version>21</java.version>

    <!-- External Library Versions -->
    <logback.version>1.5.19</logback.version>
    <playwright.version>1.56.0</playwright.version>
    <two-captcha-java.version>1.3.1</two-captcha-java.version>

    <!-- Maven Core Plugins -->
    <exec-maven-plugin.version>3.6.2</exec-maven-plugin.version>
    <maven-enforcer-plugin.version>3.6.2</maven-enforcer-plugin.version>
    <maven-failsafe-plugin.version>3.5.4</maven-failsafe-plugin.version>
    <maven-surefire-plugin.version>3.5.4</maven-surefire-plugin.version>

    <!-- Code Quality & Coverage Plugins -->
    <jacoco.version>0.8.14</jacoco.version>
    <pitest.version>1.21.0</pitest.version>
    <pitest-junit5-plugin.version>1.2.3</pitest-junit5-plugin.version>
    <sortpom-maven-plugin.version>4.0.0</sortpom-maven-plugin.version>
    <spotbugs.version>4.9.8.1</spotbugs.version>
    <findsecbugs-plugin.version>1.14.0</findsecbugs-plugin.version>
    <spring-javaformat.version>0.0.47</spring-javaformat.version>

    <!-- Security & Dependency Management Plugins -->
    <dependency-check.version>12.1.8</dependency-check.version>
    <versions-maven-plugin.version>2.19.1</versions-maven-plugin.version>

    <!-- OpenRewrite Plugins -->
    <rewrite-logging-frameworks.version>3.17.0</rewrite-logging-frameworks.version>
    <rewrite-maven-plugin.version>6.21.1</rewrite-maven-plugin.version>
    <rewrite-spring.version>0.15.0</rewrite-spring.version>
    <rewrite-static-analysis.version>2.19.0</rewrite-static-analysis.version>
    <rewrite-testing-frameworks.version>3.19.0</rewrite-testing-frameworks.version>

    <!-- Coverage & Quality Thresholds -->
    <jacoco.branch.coverage.minimum>0.75</jacoco.branch.coverage.minimum>
    <jacoco.line.coverage.minimum>0.80</jacoco.line.coverage.minimum>
    <pitest.coverage.threshold>0</pitest.coverage.threshold>
    <pitest.mutation.threshold>0</pitest.mutation.threshold>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Globally exclude conflicting JSON library to prevent classpath conflicts -->
      <dependency>
        <groupId>com.vaadin.external.google</groupId>
        <artifactId>android-json</artifactId>
        <version>0.0.20131108.vaadin1</version>
        <scope>provided</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents.client5</groupId>
      <artifactId>httpclient5</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>

    <dependency>
      <groupId>com.microsoft.playwright</groupId>
      <artifactId>playwright</artifactId>
      <version>${playwright.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.2captcha</groupId>
      <artifactId>2captcha-java</artifactId>
      <version>${two-captcha-java.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <plugins>
      <!-- Build Environment Enforcement -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.6.3</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>${java.version}</version>
                </requireJavaVersion>
                <bannedDependencies>
                  <searchTransitive>true</searchTransitive>
                  <excludes>
                    <exclude>commons-logging</exclude>
                    <exclude>log4j:log4j</exclude>
                  </excludes>
                </bannedDependencies>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Dependency Management -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <configuration>
          <generateBackupPoms>false</generateBackupPoms>
          <rulesUri>file:///${session.executionRootDirectory}/.mvn/maven-version-rules.xml</rulesUri>
        </configuration>
      </plugin>

      <!-- Security Vulnerability Scanning -->
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>${dependency-check.version}</version>
        <configuration>
          <failBuildOnCVSS>10</failBuildOnCVSS>
          <skipTestScope>true</skipTestScope>
          <formats>
            <format>ALL</format>
          </formats>
          <suppressionFile>${project.basedir}/.mvn/owasp-suppression.xml</suppressionFile>
          <!-- NVD API Configuration for enhanced vulnerability data -->
          <nvdApiKey>583dd667-e2c5-492d-9f1d-dca0c2af2cbf</nvdApiKey>
          <nvdMaxRetryCount>3</nvdMaxRetryCount>
          <nvdApiDelay>2000</nvdApiDelay>
          <!-- Disable analyzers that require external tools not available -->
          <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
          <nodeAnalyzerEnabled>false</nodeAnalyzerEnabled>
          <nodeAuditAnalyzerEnabled>false</nodeAuditAnalyzerEnabled>
          <retireJsAnalyzerEnabled>false</retireJsAnalyzerEnabled>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Git Information -->
      <plugin>
        <groupId>io.github.git-commit-id</groupId>
        <artifactId>git-commit-id-maven-plugin</artifactId>
      </plugin>

      <!-- SBOM Generation -->
      <plugin>
        <groupId>org.cyclonedx</groupId>
        <artifactId>cyclonedx-maven-plugin</artifactId>
      </plugin>

      <!-- Code Formatting -->
      <plugin>
        <groupId>io.spring.javaformat</groupId>
        <artifactId>spring-javaformat-maven-plugin</artifactId>
        <version>${spring-javaformat.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>validate</goal>
            </goals>
            <phase>validate</phase>
            <inherited>true</inherited>
          </execution>
        </executions>
      </plugin>

      <!-- Compilation -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <annotationProcessorPaths>
            <path>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-configuration-processor</artifactId>
            </path>
          </annotationProcessorPaths>
          <release>${java.version}</release>
        </configuration>
      </plugin>

      <!-- Test Execution -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <argLine>${jacoco.argLine} -Xmx1024m</argLine>
          <includes>
            <include>**/*Test.java</include>
            <include>**/*Tests.java</include>
          </includes>
          <systemPropertyVariables>
            <spring.profiles.active>test</spring.profiles.active>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <!-- Integration Tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <argLine>-Xmx2048m</argLine>
          <includes>
            <include>**/*IT.java</include>
            <include>**/*IntegrationTest.java</include>
          </includes>
          <systemPropertyVariables>
            <spring.profiles.active>integration-test</spring.profiles.active>
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Code Coverage -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <configuration>
          <propertyName>jacoco.argLine</propertyName>
        </configuration>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <propertyName>jacoco.argLine</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>jacoco-report</id>
            <goals>
              <goal>report</goal>
            </goals>
            <phase>test</phase>
          </execution>
        </executions>
      </plugin>

      <!-- Mutation Testing -->
      <plugin>
        <groupId>org.pitest</groupId>
        <artifactId>pitest-maven</artifactId>
        <version>${pitest.version}</version>
        <configuration>
          <targetClasses>
            <param>com.patbaumgartner.couponbooster.*</param>
          </targetClasses>
          <targetTests>
            <param>com.patbaumgartner.couponbooster.*</param>
          </targetTests>
          <mutationThreshold>${pitest.mutation.threshold}</mutationThreshold>
          <coverageThreshold>${pitest.coverage.threshold}</coverageThreshold>
          <excludedClasses>
            <param>com.patbaumgartner.couponbooster.CouponBoosterApplication</param>
            <param>com.patbaumgartner.couponbooster.config.*</param>
          </excludedClasses>
          <outputFormats>
            <outputFormat>HTML</outputFormat>
            <outputFormat>XML</outputFormat>
          </outputFormats>
          <!-- Fix JaCoCo integration issue -->
          <jvmArgs>
            <jvmArg>-Xmx1024m</jvmArg>
          </jvmArgs>
          <!-- Avoid argLine conflicts -->
          <useClasspathJar>true</useClasspathJar>
          <verbose>false</verbose>
          <timestampedReports>false</timestampedReports>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-junit5-plugin</artifactId>
            <version>${pitest-junit5-plugin.version}</version>
          </dependency>
        </dependencies>
      </plugin>

      <!-- Static Code Analysis -->
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${spotbugs.version}</version>
        <configuration>
          <effort>Max</effort>
          <threshold>Low</threshold>
          <failOnError>true</failOnError>
          <excludeFilterFile>${project.basedir}/.mvn/spotbugs-exclude.xml</excludeFilterFile>
          <plugins>
            <plugin>
              <groupId>com.h3xstream.findsecbugs</groupId>
              <artifactId>findsecbugs-plugin</artifactId>
              <version>${findsecbugs-plugin.version}</version>
            </plugin>
          </plugins>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Code Modernization and Refactoring -->
      <plugin>
        <groupId>org.openrewrite.maven</groupId>
        <artifactId>rewrite-maven-plugin</artifactId>
        <version>${rewrite-maven-plugin.version}</version>
        <configuration>
          <activeRecipes>
            <recipe>org.openrewrite.staticanalysis.CodeCleanup</recipe>
            <recipe>org.openrewrite.java.logging.slf4j.Slf4jBestPractices</recipe>
            <recipe>org.openrewrite.java.testing.junit5.JUnit5BestPractices</recipe>
            <recipe>io.moderne.java.spring.boot3.UpgradeSpringBoot_3_5</recipe>
            <recipe>io.moderne.java.spring.boot3.SpringBoot3BestPractices</recipe>
          </activeRecipes>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>io.moderne.recipe</groupId>
            <artifactId>rewrite-spring</artifactId>
            <version>${rewrite-spring.version}</version>
          </dependency>
          <dependency>
            <groupId>org.openrewrite.recipe</groupId>
            <artifactId>rewrite-static-analysis</artifactId>
            <version>${rewrite-static-analysis.version}</version>
          </dependency>
          <dependency>
            <groupId>org.openrewrite.recipe</groupId>
            <artifactId>rewrite-logging-frameworks</artifactId>
            <version>${rewrite-logging-frameworks.version}</version>
          </dependency>
          <dependency>
            <groupId>org.openrewrite.recipe</groupId>
            <artifactId>rewrite-testing-frameworks</artifactId>
            <version>${rewrite-testing-frameworks.version}</version>
          </dependency>
        </dependencies>
      </plugin>

      <!-- POM Organization -->
      <plugin>
        <groupId>com.github.ekryd.sortpom</groupId>
        <artifactId>sortpom-maven-plugin</artifactId>
        <version>${sortpom-maven-plugin.version}</version>
        <configuration>
          <predefinedSortOrder>custom_1</predefinedSortOrder>
          <lineSeparator>\n</lineSeparator>
          <encoding>${project.build.sourceEncoding}</encoding>
          <sortProperties>false</sortProperties>
          <keepBlankLines>true</keepBlankLines>
          <sortDependencies>scope</sortDependencies>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>sort</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Spring Boot Application -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <layers>
            <enabled>true</enabled>
          </layers>
          <image>
            <buildpacks>
              <buildpack>gcr.io/paketo-buildpacks/bellsoft-liberica</buildpack>
              <buildpack>gcr.io/paketo-buildpacks/java</buildpack>
            </buildpacks>
          </image>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>build-info</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Playwright CLI Access -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${exec-maven-plugin.version}</version>
        <configuration>
          <mainClass>com.microsoft.playwright.CLI</mainClass>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
